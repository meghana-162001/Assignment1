# -*- coding: utf-8 -*-
"""dataanalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10oHCVSSjASr6eo1Jsji0aSgiIj_DPU32
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

# Load cleaned dataset
cleaned_data_path = "/content/cleaned_frailty_data.csv"  # Update path if needed
df = pd.read_csv(cleaned_data_path)

# Standardize column names
df.columns = df.columns.str.lower().str.strip()
print("Updated Column Names:", df.columns)

# Ensure results directory exists
results_dir = "results"
os.makedirs(results_dir, exist_ok=True)

# Compute and save summary statistics
summary_stats = df.describe()
summary_stats.to_csv(os.path.join(results_dir, "summary_statistics.csv"))

# Compute and save correlation matrix
correlation_matrix = df.corr()
correlation_matrix.to_csv(os.path.join(results_dir, "correlation_matrix.csv"))

print("Data analysis completed. Results saved.")

# Function to find the correct grip strength column
def get_grip_strength_col(dataframe):
    possible_names = ["grip strength", "grip_strength"]
    for col in possible_names:
        if col in dataframe.columns:
            return col
    raise KeyError("Column 'Grip Strength' not found. Check CSV headers.")

grip_strength_col = get_grip_strength_col(df)

# Bar Plot: Average Grip Strength by Frailty Status
plt.figure(figsize=(6, 4))
sns.barplot(x=df["frailty"], y=df[grip_strength_col], estimator=lambda x: x.mean(), ci=None)
plt.title("Average Grip Strength by Frailty Status")
plt.xlabel("Frailty (1 = Yes, 0 = No)")
plt.ylabel("Average Grip Strength (kg)")
plt.xticks(ticks=[0, 1], labels=["No Frailty", "Frailty"])
plt.grid()

# Save bar plot
bar_plot_path = os.path.join(results_dir, "average_grip_strength_frailty.png")
plt.savefig(bar_plot_path)
plt.show()

print("Bar plot saved in 'results/' directory.")

# Additional Box Plot for better visualization
plt.figure(figsize=(6, 4))
sns.boxplot(x=df["frailty"], y=df[grip_strength_col])
plt.title("Grip Strength Distribution by Frailty Status")
plt.xlabel("Frailty (1 = Yes, 0 = No)")
plt.ylabel("Grip Strength (kg)")
plt.grid()

# Save box plot
box_plot_path = os.path.join(results_dir, "grip_strength_boxplot.png")
plt.savefig(box_plot_path)
plt.show()

print("Box plot saved in 'results/' directory.")

# Histogram: Distribution of Grip Strength
plt.figure(figsize=(6, 4))
sns.histplot(df[grip_strength_col], bins=20, kde=True)
plt.title("Distribution of Grip Strength")
plt.xlabel("Grip Strength (kg)")
plt.ylabel("Frequency")
plt.grid()

# Save histogram
histogram_path = os.path.join(results_dir, "grip_strength_distribution.png")
plt.savefig(histogram_path)
plt.show()

print("Histogram saved in 'results/' directory.")